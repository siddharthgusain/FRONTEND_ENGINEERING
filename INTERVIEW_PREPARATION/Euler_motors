/**
 * console.log('1');
 * setTimout(() => console.log('1 1'));
 * setTimout(() => console.log('1 1 1'), 100);
 * console.log('1 1 1 1');
 *
 * output ?
 * 1
 * 1 1 1 1
 * 1 1
 * 1 1 1
 *
 * let, var, and const diff ?
 * console.log(a)
 * console.log(b); //undeifined
 *
 *
 *
 * let a=10;
 * var b =20;
 *
 *
 * {
 *  var b = 30;
 *  let a = 40
 * console.log(a)
 * console.log(b);
 * }
 *
 * console.log(a)
 * console.log(b);
 * /////////////////
 *
 * console.log(aa); /// undefined
 * var aa;
 * console.log(aa); undeinfed
 * var aa = 10;
 * console.log(aa); 10
 *
 * Memoization ??
 *
 * closure ??
 * function outer(a){
 *  // var a = 10;
 *  return inner(b){
 *    console.log('outer scoped input', a)
 *    console.log('sum', a + b)
 * }
 * }
 *
 * var res = outer(1)(2)() // 3
 * res();
 *
 *
 * someFunction(1)(2)(3)(4)();
 * implement someFunction
 *
 */
// function someFunction(first) {
//   return function name(second){
//       if(second)
//         return someFunction(first + second);
//       else
//         return first;
//   }
// }

// console.log(someFunction(1)(2)(3)(4)())

/**
 * ([{}]) // balanced bodmass string
 *
 * (() // unbalanced
 *
 * for i=0 to length:
 *    check for opening bracket
 *        -> push to stack
 *    check for closing
 *        -> check the top of stack
 *        -> oepning -> pop it 
 *        -> closing bracket -> return unbalanced string
 *
 *
 */
