-> What are events and event handlers in context of signals and interrupts
-> What are default signal handlers and User defined signal/event handlers
-> Understanding Js as creating user defined handlers for signals/events.
-> Typed vs dynamic language
-> Check the developer roadmap.

Types of environment for a application
1. System/software -> Creating wireframes -> development -> testing -> staging -> production 
2. What is server(An application specific chip with some os installed)
3. How server OS are different from General purpose OS
4. Linux for general purpose OS and server OS.
5. Server from hardware and software point of views
6. What is SDK?

Well, I guess the entire concept of software engineering rests on the basis on abstractions. 
Each developer will decide which layers of abstraction are relevant to them. 
Theoretically, a properly created layer of abstraction with exposed APIs should have its implementation
details be unimportant to the user. However, in reality knowing implementation details is often times
important. If a user spends all of their time learning the implementation, they will be less 
productive in their task. But always avoiding learning implementation results is a poor knowledge base.